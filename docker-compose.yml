version: "3.9"
   
services:
  db:
    image: library/postgres:12
    volumes:
      - sns-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5009:5432"
  redis:
    image: redis:7
    ports:
      - "6380:6379"
  drf:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
      - static:/code/static
      - media:/code/media
 
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - ALLOWED_CLIENT_HOSTS=${ALLOWED_CLIENT_HOSTS}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - SPARROW_SMS_TOKEN=${SPARROW_SMS_TOKEN}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      - db
      - redis
      # - es
  celery:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - redis
      - db
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
  nginx:
    build: ./nginx
    restart: always
    volumes:
      - static:/code/static
      - media:/code/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
       - "8009:80"
    depends_on:
      - drf


volumes:
  sns-db:
    driver: local
  static: 
  media:



